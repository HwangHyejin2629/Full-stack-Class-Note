refactory.guru/ko

1. JWT(JsasonWebToken)
클라이언트 화면요청 -> 서버 화면 돌려줄때 토큰 발급 ->클라이언트 요청시 토큰 가지고 서버로 요청

1) 토큰의 구성
헤더 : 알고리즘 {"alg":~~,},
페이로드 : ID, 발급자, 발급날짜,유효기간 {"iss":~~,}
서명 : 헤더와 페이로드를 암호화 하여 구성
-> 3개의 문자열 묶음으로 인코딩됨 . 으로 묶여있다.

2. 스프링부트 시큐리티
인증 필요할 시 알아서 처리하게 하자

- 인증 : 누구냐 확인
- 인가 : 접근이 가능한지 확인
- 필터 : 보안 확인후 ->Base64인코딩 해서 controller로 보냄 

작업 순서
filter : 토큰이 유효한지 검증, 인증된 사용자의 정보를 저장 ->
Spring secrity : 필터체인기반, 우리가 만든 필터를 Spring secrity가 사용하도록 설정
-> 필터체인.doFilter( )를 반드시 호출해야한다. -다음필터... 끝나면 넘어가도록 하는역할
->회원가입 : 로그인시 토큰발급 -> 인증이 필요한 API 사용시 토큰과 함께 요청한다.